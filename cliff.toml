# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# template for the changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file. See [conventional commits](https://www.conventionalcommits.org/) for commit guidelines.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
---
{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]($REPO/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group in ["Features 🏔️", "Bug Fixes 🐛", "Performance ⏱️", "Documentation 📚", "Other Changes"] %}\
    {% set group_commits = commits | filter(attribute="group", value=group) %}\
    {% if group_commits %}
        ### {{ group | striptags | trim | upper_first }}
        {% for commit in group_commits
        | filter(attribute="scope")
        | sort(attribute="scope") %}
            - **{{commit.scope}}{% if commit.breaking %}** [**breaking**]**{% endif %}:** \
                {{ commit.message }} - [{{ commit.id | truncate(length=7, end="") }}]($REPO/commit/{{ commit.id }})
        {%- endfor -%}
        {% raw %}\n{% endraw %}\
        {%- for commit in group_commits %}
            {%- if commit.scope -%}
            {% else -%}
                - {% if commit.breaking %} [**breaking**]{% endif %}\
                    {{ commit.message }} - [{{ commit.id | truncate(length=7, end="") }}]($REPO/commit/{{ commit.id }})
            {% endif -%}
        {% endfor -%}
    {% endif -%}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace from the templates
trim = true
# postprocessors
postprocessors = [
    { pattern = '\$REPO', replace = "https://github.com/square/exoskeleton" },
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    # { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/orhun/git-cliff/issues/${2}))"}, # replace issue numbers
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^doc\\(changelog\\):", skip = true },
    { message = "^chore\\(version\\):", skip = true },

    { message = "^feat\\b", group = "Features 🏔️" },
    { message = "^fix\\b", group = "Bug Fixes 🐛" },
    { message = "^perf\\b", group = "Performance ⏱️" },
    { message = "^doc\\b", group = "Documentation 📚" },

    { message = "^refactor\\b", group = "Other Changes" },
    { message = "^chore\\b", group = "Other Changes" },
    { message = "^ci\\b", group = "Other Changes" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = true
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
